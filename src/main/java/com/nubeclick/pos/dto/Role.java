package com.nubeclick.pos.dto;
// Generated 07/04/2018 08:40:29 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "role", catalog = "posnubeclick", uniqueConstraints = {
		@UniqueConstraint(columnNames = "role_description"), @UniqueConstraint(columnNames = "role_level") })
public class Role implements java.io.Serializable {

	private static final long serialVersionUID = -8078732192609267665L;
	private Integer roleId;
	private String roleDescription;
	private int roleLevel;
	private Set<Employee> employees = new HashSet<Employee>(0);
	private Set<User> users = new HashSet<User>(0);

	public Role() {
	}

	public Role(String roleDescription, int roleLevel) {
		this.roleDescription = roleDescription;
		this.roleLevel = roleLevel;
	}

	public Role(String roleDescription, int roleLevel, Set<Employee> employees, Set<User> users) {
		this.roleDescription = roleDescription;
		this.roleLevel = roleLevel;
		this.employees = employees;
		this.users = users;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "role_id", unique = true, nullable = false)
	public Integer getRoleId() {
		return this.roleId;
	}

	public void setRoleId(Integer roleId) {
		this.roleId = roleId;
	}

	@Column(name = "role_description", unique = true, nullable = false, length = 150)
	public String getRoleDescription() {
		return this.roleDescription;
	}

	public void setRoleDescription(String roleDescription) {
		this.roleDescription = roleDescription;
	}

	@Column(name = "role_level", unique = true, nullable = false)
	public int getRoleLevel() {
		return this.roleLevel;
	}

	public void setRoleLevel(int roleLevel) {
		this.roleLevel = roleLevel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
